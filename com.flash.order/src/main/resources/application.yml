server:
  port: ${ORDER_PORT}

spring:
  application:
    name: order
  datasource:
    url: ${DB_DATABASE}/orders
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  kafka:
    bootstrap-servers: localhost:9092  # Kafka 서버 주소
    consumer:
      group-id: order-group  # 컨슈머 그룹 ID
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  data:
    redis:
      host: ${REDIS_DOMAIN}
      port: ${REDIS_PORT}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  cloud:
    openfeign:
      okhttp:
        enabled: true

#결제 api
iamport:
  apiKey: ${IAMPORT_API_KEY}
  apiSecret: ${IAMPORT_API_SECRET}


eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DOMAIN}:${EUREKA_PORT}/eureka/
